[{"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/index.js":"1","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/reportWebVitals.js":"2","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/index.js":"3","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/App.js":"4","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/index.js":"5","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/Navbar.js":"6","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/index.js":"7","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/Post.js":"8","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/index.js":"9","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/Sub.js":"10","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/index.js":"11","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/Home.js":"12","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/index.js":"13","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/Modal.js":"14","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/index.js":"15","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/FormGroup.js":"16","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/api/index.js":"17","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/index.js":"18","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/Sidebar.js":"19","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/index.js":"20","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/Dropdown.js":"21","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/index.js":"22","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comments.js":"23","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/index.js":"24","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/index.js":"25","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/Comment.js":"26","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/CommentForm.js":"27","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/index.js":"28","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/PostContainer.js":"29","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/index.js":"30","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/SidebarItem.js":"31","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/index.js":"32","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/UserProfile.js":"33","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/index.js":"34","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/SubHeader.js":"35","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/index.js":"36","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/SubscribeButton.js":"37","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/index.js":"38","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/index.js":"39","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/PostForm.js":"40","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/SubForm.js":"41","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/index.js":"42","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/SignupForm.js":"43","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/index.js":"44","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/LoginForm.js":"45","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/index.js":"46","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/DropdownItem.js":"47","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/index.js":"48","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/SubIndex.js":"49","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/index.js":"50","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/Loader.js":"51"},{"size":489,"mtime":1607378515502,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":1606940724457,"results":"54","hashOfConfig":"53"},{"size":33,"mtime":1606940951789,"results":"55","hashOfConfig":"53"},{"size":3049,"mtime":1608153709091,"results":"56","hashOfConfig":"53"},{"size":36,"mtime":1606945211838,"results":"57","hashOfConfig":"53"},{"size":2241,"mtime":1608153709099,"results":"58","hashOfConfig":"53"},{"size":34,"mtime":1607546065446,"results":"59","hashOfConfig":"53"},{"size":1780,"mtime":1607983853234,"results":"60","hashOfConfig":"53"},{"size":33,"mtime":1607109336580,"results":"61","hashOfConfig":"53"},{"size":1347,"mtime":1608153709105,"results":"62","hashOfConfig":"53"},{"size":34,"mtime":1607110371546,"results":"63","hashOfConfig":"53"},{"size":1005,"mtime":1608153709096,"results":"64","hashOfConfig":"53"},{"size":35,"mtime":1607124329946,"results":"65","hashOfConfig":"53"},{"size":817,"mtime":1608153709098,"results":"66","hashOfConfig":"53"},{"size":39,"mtime":1607124562217,"results":"67","hashOfConfig":"53"},{"size":969,"mtime":1607721082740,"results":"68","hashOfConfig":"53"},{"size":1482,"mtime":1607988587385,"results":"69","hashOfConfig":"53"},{"size":37,"mtime":1607362299552,"results":"70","hashOfConfig":"53"},{"size":894,"mtime":1608153709102,"results":"71","hashOfConfig":"53"},{"size":38,"mtime":1607116316361,"results":"72","hashOfConfig":"53"},{"size":2619,"mtime":1608153709095,"results":"73","hashOfConfig":"53"},{"size":38,"mtime":1607457845365,"results":"74","hashOfConfig":"53"},{"size":973,"mtime":1607983319750,"results":"75","hashOfConfig":"53"},{"size":37,"mtime":1607457824414,"results":"76","hashOfConfig":"53"},{"size":41,"mtime":1607457889298,"results":"77","hashOfConfig":"53"},{"size":2122,"mtime":1607624457900,"results":"78","hashOfConfig":"53"},{"size":1513,"mtime":1608153709093,"results":"79","hashOfConfig":"53"},{"size":43,"mtime":1607546056761,"results":"80","hashOfConfig":"53"},{"size":1160,"mtime":1608058241124,"results":"81","hashOfConfig":"53"},{"size":41,"mtime":1607631256802,"results":"82","hashOfConfig":"53"},{"size":459,"mtime":1607632520584,"results":"83","hashOfConfig":"53"},{"size":41,"mtime":1607637126598,"results":"84","hashOfConfig":"53"},{"size":134,"mtime":1608054142144,"results":"85","hashOfConfig":"53"},{"size":39,"mtime":1607969746465,"results":"86","hashOfConfig":"53"},{"size":951,"mtime":1608153709107,"results":"87","hashOfConfig":"53"},{"size":45,"mtime":1607972476303,"results":"88","hashOfConfig":"53"},{"size":1978,"mtime":1608153709112,"results":"89","hashOfConfig":"53"},{"size":38,"mtime":1608053466966,"results":"90","hashOfConfig":"53"},{"size":37,"mtime":1608053471198,"results":"91","hashOfConfig":"53"},{"size":2580,"mtime":1608153709101,"results":"92","hashOfConfig":"53"},{"size":2420,"mtime":1608153709106,"results":"93","hashOfConfig":"53"},{"size":40,"mtime":1608053571799,"results":"94","hashOfConfig":"53"},{"size":1312,"mtime":1608153709103,"results":"95","hashOfConfig":"53"},{"size":39,"mtime":1608053616358,"results":"96","hashOfConfig":"53"},{"size":1805,"mtime":1608153709096,"results":"97","hashOfConfig":"53"},{"size":42,"mtime":1607368599035,"results":"98","hashOfConfig":"53"},{"size":468,"mtime":1608066411483,"results":"99","hashOfConfig":"53"},{"size":38,"mtime":1608054571037,"results":"100","hashOfConfig":"53"},{"size":1115,"mtime":1608153709110,"results":"101","hashOfConfig":"53"},{"size":36,"mtime":1608057776649,"results":"102","hashOfConfig":"53"},{"size":192,"mtime":1608058784366,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"1bht6nm",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"106"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"106"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"106"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"106"},"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/index.js",[],["214","215"],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/reportWebVitals.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/App.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/Navbar.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/Post.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/Sub.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/Home.js",["216"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport Post from \"../Post\";\nimport Sidebar from \"../Sidebar\";\n\nconst Home = ({ user, token }) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchGetData(\n        \"http://localhost:3000/api/s/user\",\n        token\n      );\n      console.log(response.posts);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"sub-container\">\n      <header className=\"sub-header\">Homepage</header>\n      {posts ? (\n        <main className=\"sub-page\">\n          <div id=\"posts-container\">\n            {posts.map((post) => (\n              <Post key={post._id} post={post} />\n            ))}\n          </div>\n          <Sidebar\n            sub={{\n              name: \"Homepage\",\n              description: \"Your personalized homepage\",\n            }}\n          />\n        </main>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/Modal.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/FormGroup.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/api/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/Sidebar.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/Dropdown.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comments.js",["217"],"import \"./Comments.css\";\nimport { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"../CommentForm\";\n\nconst Comments = ({ postComments, user, token }) => {\n  const [comments, setComments] = useState(postComments);\n\n  const handleNewComment = (comment) => {};\n\n  const renderAllComments = (comments, layer) => {\n    return comments.map((comment) => (\n      <Comment\n        comment={comment}\n        user={user}\n        handleNewComment={handleNewComment}\n        layer={layer}\n      >\n        {comment.replies ? renderAllComments(comment.replies, layer + 1) : null}\n      </Comment>\n    ));\n  };\n\n  return (\n    <div id=\"comments-container\">\n      <div>\n        <CommentForm\n          handleNewComment={handleNewComment}\n          user={user}\n          token={token}\n        />\n      </div>\n      <div id=\"comments-index\">\n        {comments ? renderAllComments(comments, 1) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/Comment.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/CommentForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/PostContainer.js",["218"],"import \"./PostContainer.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchGetData } from \"../../api\";\n\nimport Comments from \"../Comments\";\nimport Post from \"../Post\";\nimport Sidebar from \"../Sidebar\";\nimport Loader from \"../Loader\";\n\nconst PostContainer = ({ user }) => {\n  const { subID, postID } = useParams();\n  const [post, setPost] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetchGetData(\n        `http://localhost:3000/api/s/${subID}/posts/${postID}`\n      );\n      setPost(response.post);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : post ? (\n        <div id=\"post-container\">\n          <div id=\"post-container-left\">\n            <Post post={post} user={user} />\n            <Comments postComments={post.comments} user={user} />\n          </div>\n          <Sidebar sub={post.sub} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostContainer;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/SidebarItem.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/UserProfile.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/SubHeader.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/SubscribeButton.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/PostForm.js",["219"],"import \"./PostForm.css\";\n\nimport { fetchGetData, fetchPostData } from \"../../api/index\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport FormGroup from \"../FormGroup\";\n\nconst PostForm = ({ user, token }) => {\n  const { subID } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [sub, setSub] = useState(subID);\n  const [subs, setSubs] = useState(null);\n  const [postCreated, setPostCreated] = useState(null);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchGetData(\n        \"http://localhost:3000/api/s/user\",\n        token\n      );\n      setSubs(response.subs);\n    };\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    e.target.name === \"title\"\n      ? setTitle(e.target.value)\n      : e.target.name === \"content\"\n      ? setContent(e.target.value)\n      : setSub(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetchPostData(\n      `http://localhost:3000/api/s/${sub}/posts/create`,\n      {\n        sub,\n        title,\n        content,\n      },\n      token\n    );\n    console.log(response);\n    setPostCreated(response.savedPost);\n  };\n\n  return (\n    <div class=\"form-container\">\n      <div class=\"form-picture\"></div>\n      <form className=\"form-left\">\n        <h2 className=\"form-heading\">New Post</h2>\n        {subs ? (\n          <div className=\"form-group\">\n            <label className=\"form-group-label\" htmlFor=\"sub\">\n              Community\n            </label>\n            <select name=\"sub\" onChange={handleChange} defaultValue={subID}>\n              {subs.map((sub) => (\n                <option key={sub._id} value={sub._id}>\n                  {sub.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        ) : null}\n        <FormGroup\n          name=\"title\"\n          type=\"text\"\n          handleChange={handleChange}\n          value={title}\n        >\n          Title\n        </FormGroup>\n        <FormGroup\n          name=\"content\"\n          type=\"textarea\"\n          handleChange={handleChange}\n          value={content}\n        >\n          Body\n        </FormGroup>\n        <button onClick={handleSubmit} className=\"button-filled\">\n          Submit\n        </button>\n        {postCreated ? (\n          <Redirect to={`/s/${sub}/posts/${postCreated._id}`} />\n        ) : null}\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/SubForm.js",["220","221"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport FormGroup from \"../FormGroup\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SubForm.css\";\n\nconst SubForm = ({ user, token }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState(\"#0079d3\");\n  const [allSubs, setAllSubs] = useState(null);\n  // const [error, setError] = useState(null);\n  const [subCreated, setSubCreated] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchGetData(\"http://localhost:3000/api/s/\");\n      setAllSubs(data.allSubs);\n    };\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    e.target.name === \"name\"\n      ? setName(e.target.value)\n      : e.target.name === \"description\"\n      ? setDescription(e.target.value)\n      : setColor(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log({ name, description, color });\n    // const response = await fetchPostData(\n    //   `http://localhost:3000/api/s/create`,\n    //   {\n    //     name,\n    //     description,\n    //     color,\n    //     image\n    //   },\n    //   user.token\n    // );\n    // console.log(response);\n    // setSubCreated(response.response);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"form-picture\"></div>\n      <form className=\"form-left\">\n        <h2 className=\"form-heading\">Create Community</h2>\n        <FormGroup\n          name=\"name\"\n          type=\"text\"\n          handleChange={handleChange}\n          value={name}\n        >\n          Community Name\n        </FormGroup>\n        <FormGroup\n          name=\"description\"\n          type=\"textarea\"\n          handleChange={handleChange}\n          value={description}\n        >\n          Description\n        </FormGroup>\n        <FormGroup\n          name=\"color\"\n          type=\"color\"\n          id=\"color-input\"\n          handleChange={handleChange}\n          value={color}\n        >\n          Community Color\n        </FormGroup>\n        <button\n          onClick={handleSubmit}\n          className=\"button-filled\"\n          style={{ backgroundColor: `${color}` }}\n        >\n          Submit\n        </button>\n        {subCreated ? <Redirect to={`/s/${subCreated._id}`} /> : null}\n      </form>\n    </div>\n  );\n};\n\nexport default SubForm;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/SignupForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/LoginForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/DropdownItem.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/SubIndex.js",["222"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport { Link } from \"react-router-dom\";\nimport \"./SubIndex.css\";\n\nimport Loader from \"../Loader\";\n\nconst SubIndex = ({}) => {\n  const [subs, setSubs] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetchGetData(\"http://localhost:3000/api/s/\");\n      setSubs(response.subs);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div id=\"sub-index-container\">\n      <header id=\"sub-index-header\">\n        <h1>Browse Communities</h1>\n        <Link to=\"create\">Create Community</Link>\n      </header>\n      <div id=\"sub-index\">\n        {isLoading ? (\n          <Loader />\n        ) : subs ? (\n          subs.map((sub) => (\n            <Link to={`${sub._id}`} key={sub._id} className=\"sub-preview-link\">\n              <div className=\"sub-preview\">{sub.name}</div>\n            </Link>\n          ))\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SubIndex;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/Loader.js",["223"],"import \"./Loader.css\";\n\nconst Loader = ({}) => {\n  return (\n    <div className=\"lds-facebook\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n",{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":36,"column":6,"nodeType":"230","endLine":36,"endColumn":18,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":7,"column":20,"nodeType":"234","messageId":"235","endLine":7,"endColumn":31},{"ruleId":"228","severity":1,"message":"236","line":26,"column":6,"nodeType":"230","endLine":26,"endColumn":8,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":29,"column":6,"nodeType":"230","endLine":29,"endColumn":8,"suggestions":"239"},{"ruleId":"232","severity":1,"message":"240","line":12,"column":10,"nodeType":"234","messageId":"235","endLine":12,"endColumn":17},{"ruleId":"232","severity":1,"message":"241","line":14,"column":22,"nodeType":"234","messageId":"235","endLine":14,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":8,"column":19,"nodeType":"244","messageId":"245","endLine":8,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":3,"column":17,"nodeType":"244","messageId":"245","endLine":3,"endColumn":19},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.user'. Either include it or remove the dependency array.","ArrayExpression",["248"],"no-unused-vars","'setComments' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'postID' and 'subID'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["250"],"'allSubs' is assigned a value but never used.","'setSubCreated' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},"Update the dependencies array to be: [auth.token, auth.user]",{"range":"257","text":"258"},"Update the dependencies array to be: [postID, subID]",{"range":"259","text":"260"},"Update the dependencies array to be: [auth.token]",{"range":"261","text":"262"},[906,918],"[auth.token, auth.user]",[753,755],"[postID, subID]",[876,878],"[auth.token]"]