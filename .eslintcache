[{"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/index.js":"1","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/reportWebVitals.js":"2","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/index.js":"3","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/App.js":"4","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/index.js":"5","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/Navbar.js":"6","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/index.js":"7","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/Post.js":"8","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/index.js":"9","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/Sub.js":"10","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/index.js":"11","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/Home.js":"12","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/index.js":"13","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/Modal.js":"14","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/index.js":"15","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/FormGroup.js":"16","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/api/index.js":"17","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/index.js":"18","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/Sidebar.js":"19","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/index.js":"20","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/Dropdown.js":"21","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/index.js":"22","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comments.js":"23","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/index.js":"24","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/index.js":"25","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/Comment.js":"26","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/CommentForm.js":"27","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/index.js":"28","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/PostContainer.js":"29","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/index.js":"30","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/SidebarItem.js":"31","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/index.js":"32","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/UserProfile.js":"33","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/index.js":"34","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/SubHeader.js":"35","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/index.js":"36","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/SubscribeButton.js":"37","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/index.js":"38","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/index.js":"39","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/PostForm.js":"40","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/SubForm.js":"41","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/index.js":"42","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/SignupForm.js":"43","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/index.js":"44","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/LoginForm.js":"45","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/index.js":"46","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/DropdownItem.js":"47","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/index.js":"48","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/SubIndex.js":"49","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/index.js":"50","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/Loader.js":"51","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Flash/index.js":"52","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Flash/Flash.js":"53","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/hooks/use-auth.js":"54","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PrivateRoute/index.js":"55","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PrivateRoute/PrivateRoute.js":"56","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Form/index.js":"57","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Form/Form.js":"58"},{"size":489,"mtime":1607378515502,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1606940724457,"results":"61","hashOfConfig":"60"},{"size":33,"mtime":1606940951789,"results":"62","hashOfConfig":"60"},{"size":2443,"mtime":1608153751963,"results":"63","hashOfConfig":"60"},{"size":36,"mtime":1606945211838,"results":"64","hashOfConfig":"60"},{"size":1269,"mtime":1608153751973,"results":"65","hashOfConfig":"60"},{"size":34,"mtime":1607546065446,"results":"66","hashOfConfig":"60"},{"size":1780,"mtime":1607983853234,"results":"67","hashOfConfig":"60"},{"size":33,"mtime":1607109336580,"results":"68","hashOfConfig":"60"},{"size":1212,"mtime":1608153751979,"results":"69","hashOfConfig":"60"},{"size":34,"mtime":1607110371546,"results":"70","hashOfConfig":"60"},{"size":1417,"mtime":1608153751970,"results":"71","hashOfConfig":"60"},{"size":35,"mtime":1607124329946,"results":"72","hashOfConfig":"60"},{"size":776,"mtime":1608153751972,"results":"73","hashOfConfig":"60"},{"size":39,"mtime":1607124562217,"results":"74","hashOfConfig":"60"},{"size":969,"mtime":1607721082740,"results":"75","hashOfConfig":"60"},{"size":1482,"mtime":1607988587385,"results":"76","hashOfConfig":"60"},{"size":37,"mtime":1607362299552,"results":"77","hashOfConfig":"60"},{"size":1856,"mtime":1608153751977,"results":"78","hashOfConfig":"60"},{"size":38,"mtime":1607116316361,"results":"79","hashOfConfig":"60"},{"size":3636,"mtime":1608153751967,"results":"80","hashOfConfig":"60"},{"size":38,"mtime":1607457845365,"results":"81","hashOfConfig":"60"},{"size":973,"mtime":1607983319750,"results":"82","hashOfConfig":"60"},{"size":37,"mtime":1607457824414,"results":"83","hashOfConfig":"60"},{"size":41,"mtime":1607457889298,"results":"84","hashOfConfig":"60"},{"size":2122,"mtime":1607624457900,"results":"85","hashOfConfig":"60"},{"size":1502,"mtime":1608153751965,"results":"86","hashOfConfig":"60"},{"size":43,"mtime":1607546056761,"results":"87","hashOfConfig":"60"},{"size":1160,"mtime":1608058241124,"results":"88","hashOfConfig":"60"},{"size":41,"mtime":1607631256802,"results":"89","hashOfConfig":"60"},{"size":459,"mtime":1607632520584,"results":"90","hashOfConfig":"60"},{"size":41,"mtime":1607637126598,"results":"91","hashOfConfig":"60"},{"size":134,"mtime":1608054142144,"results":"92","hashOfConfig":"60"},{"size":39,"mtime":1607969746465,"results":"93","hashOfConfig":"60"},{"size":846,"mtime":1608153751981,"results":"94","hashOfConfig":"60"},{"size":45,"mtime":1607972476303,"results":"95","hashOfConfig":"60"},{"size":1954,"mtime":1608153751983,"results":"96","hashOfConfig":"60"},{"size":38,"mtime":1608053466966,"results":"97","hashOfConfig":"60"},{"size":37,"mtime":1608053471198,"results":"98","hashOfConfig":"60"},{"size":2397,"mtime":1608153751974,"results":"99","hashOfConfig":"60"},{"size":2109,"mtime":1608153751979,"results":"100","hashOfConfig":"60"},{"size":40,"mtime":1608053571799,"results":"101","hashOfConfig":"60"},{"size":1517,"mtime":1608153751977,"results":"102","hashOfConfig":"60"},{"size":39,"mtime":1608053616358,"results":"103","hashOfConfig":"60"},{"size":1805,"mtime":1608153751971,"results":"104","hashOfConfig":"60"},{"size":42,"mtime":1607368599035,"results":"105","hashOfConfig":"60"},{"size":468,"mtime":1608066411483,"results":"106","hashOfConfig":"60"},{"size":38,"mtime":1608054571037,"results":"107","hashOfConfig":"60"},{"size":1161,"mtime":1608153751982,"results":"108","hashOfConfig":"60"},{"size":36,"mtime":1608057776649,"results":"109","hashOfConfig":"60"},{"size":192,"mtime":1608058784366,"results":"110","hashOfConfig":"60"},{"size":35,"mtime":1608153751969,"results":"111","hashOfConfig":"60"},{"size":471,"mtime":1608153751968,"results":"112","hashOfConfig":"60"},{"size":1738,"mtime":1608153751983,"results":"113","hashOfConfig":"60"},{"size":42,"mtime":1608153751975,"results":"114","hashOfConfig":"60"},{"size":530,"mtime":1608153751975,"results":"115","hashOfConfig":"60"},{"size":34,"mtime":1608153751970,"results":"116","hashOfConfig":"60"},{"size":612,"mtime":1608153751969,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"1bht6nm",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"120"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"120"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"120"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/index.js",[],["243","244"],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/reportWebVitals.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/App/App.js",["245"],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Navbar/Navbar.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Post/Post.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sub/Sub.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Home/Home.js",["246"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport Post from \"../Post\";\nimport Sidebar from \"../Sidebar\";\n\nconst Home = ({ user, token }) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchGetData(\n        \"http://localhost:3000/api/s/user\",\n        token\n      );\n      console.log(response.posts);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"sub-container\">\n      <header className=\"sub-header\">Homepage</header>\n      {posts ? (\n        <main className=\"sub-page\">\n          <div id=\"posts-container\">\n            {posts.map((post) => (\n              <Post key={post._id} post={post} />\n            ))}\n          </div>\n          <Sidebar\n            sub={{\n              name: \"Homepage\",\n              description: \"Your personalized homepage\",\n            }}\n          />\n        </main>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Modal/Modal.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/FormGroup/FormGroup.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/api/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Sidebar/Sidebar.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropDown/Dropdown.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comments.js",["247"],"import \"./Comments.css\";\nimport { useState } from \"react\";\nimport Comment from \"./Comment\";\nimport CommentForm from \"../CommentForm\";\n\nconst Comments = ({ postComments, user, token }) => {\n  const [comments, setComments] = useState(postComments);\n\n  const handleNewComment = (comment) => {};\n\n  const renderAllComments = (comments, layer) => {\n    return comments.map((comment) => (\n      <Comment\n        comment={comment}\n        user={user}\n        handleNewComment={handleNewComment}\n        layer={layer}\n      >\n        {comment.replies ? renderAllComments(comment.replies, layer + 1) : null}\n      </Comment>\n    ));\n  };\n\n  return (\n    <div id=\"comments-container\">\n      <div>\n        <CommentForm\n          handleNewComment={handleNewComment}\n          user={user}\n          token={token}\n        />\n      </div>\n      <div id=\"comments-index\">\n        {comments ? renderAllComments(comments, 1) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Comments/Comment/Comment.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/CommentForm/CommentForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostContainer/PostContainer.js",["248"],"import \"./PostContainer.css\";\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchGetData } from \"../../api\";\n\nimport Comments from \"../Comments\";\nimport Post from \"../Post\";\nimport Sidebar from \"../Sidebar\";\nimport Loader from \"../Loader\";\n\nconst PostContainer = ({ user }) => {\n  const { subID, postID } = useParams();\n  const [post, setPost] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetchGetData(\n        `http://localhost:3000/api/s/${subID}/posts/${postID}`\n      );\n      setPost(response.post);\n      setIsLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : post ? (\n        <div id=\"post-container\">\n          <div id=\"post-container-left\">\n            <Post post={post} user={user} />\n            <Comments postComments={post.comments} user={user} />\n          </div>\n          <Sidebar sub={post.sub} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PostContainer;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SidebarItem/SidebarItem.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/UserProfile/UserProfile.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubHeader/SubHeader.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubscribeButton/SubscribeButton.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PostForm/PostForm.js",["249"],"import \"./PostForm.css\";\n\nimport { fetchGetData, fetchPostData } from \"../../api/index\";\nimport { useState, useEffect } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\n\nimport FormGroup from \"../FormGroup\";\n\nconst PostForm = ({ user, token }) => {\n  const { subID } = useParams();\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [sub, setSub] = useState(subID);\n  const [subs, setSubs] = useState(null);\n  const [postCreated, setPostCreated] = useState(null);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchGetData(\n        \"http://localhost:3000/api/s/user\",\n        token\n      );\n      setSubs(response.subs);\n    };\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    e.target.name === \"title\"\n      ? setTitle(e.target.value)\n      : e.target.name === \"content\"\n      ? setContent(e.target.value)\n      : setSub(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetchPostData(\n      `http://localhost:3000/api/s/${sub}/posts/create`,\n      {\n        sub,\n        title,\n        content,\n      },\n      token\n    );\n    console.log(response);\n    setPostCreated(response.savedPost);\n  };\n\n  return (\n    <div class=\"form-container\">\n      <div class=\"form-picture\"></div>\n      <form className=\"form-left\">\n        <h2 className=\"form-heading\">New Post</h2>\n        {subs ? (\n          <div className=\"form-group\">\n            <label className=\"form-group-label\" htmlFor=\"sub\">\n              Community\n            </label>\n            <select name=\"sub\" onChange={handleChange} defaultValue={subID}>\n              {subs.map((sub) => (\n                <option key={sub._id} value={sub._id}>\n                  {sub.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        ) : null}\n        <FormGroup\n          name=\"title\"\n          type=\"text\"\n          handleChange={handleChange}\n          value={title}\n        >\n          Title\n        </FormGroup>\n        <FormGroup\n          name=\"content\"\n          type=\"textarea\"\n          handleChange={handleChange}\n          value={content}\n        >\n          Body\n        </FormGroup>\n        <button onClick={handleSubmit} className=\"button-filled\">\n          Submit\n        </button>\n        {postCreated ? (\n          <Redirect to={`/s/${sub}/posts/${postCreated._id}`} />\n        ) : null}\n      </form>\n    </div>\n  );\n};\n\nexport default PostForm;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubForm/SubForm.js",["250","251"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport FormGroup from \"../FormGroup\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SubForm.css\";\n\nconst SubForm = ({ user, token }) => {\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [color, setColor] = useState(\"#0079d3\");\n  const [allSubs, setAllSubs] = useState(null);\n  // const [error, setError] = useState(null);\n  const [subCreated, setSubCreated] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const data = await fetchGetData(\"http://localhost:3000/api/s/\");\n      setAllSubs(data.allSubs);\n    };\n    fetchData();\n  }, []);\n\n  const handleChange = (e) => {\n    e.target.name === \"name\"\n      ? setName(e.target.value)\n      : e.target.name === \"description\"\n      ? setDescription(e.target.value)\n      : setColor(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log({ name, description, color });\n    // const response = await fetchPostData(\n    //   `http://localhost:3000/api/s/create`,\n    //   {\n    //     name,\n    //     description,\n    //     color,\n    //     image\n    //   },\n    //   user.token\n    // );\n    // console.log(response);\n    // setSubCreated(response.response);\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"form-picture\"></div>\n      <form className=\"form-left\">\n        <h2 className=\"form-heading\">Create Community</h2>\n        <FormGroup\n          name=\"name\"\n          type=\"text\"\n          handleChange={handleChange}\n          value={name}\n        >\n          Community Name\n        </FormGroup>\n        <FormGroup\n          name=\"description\"\n          type=\"textarea\"\n          handleChange={handleChange}\n          value={description}\n        >\n          Description\n        </FormGroup>\n        <FormGroup\n          name=\"color\"\n          type=\"color\"\n          id=\"color-input\"\n          handleChange={handleChange}\n          value={color}\n        >\n          Community Color\n        </FormGroup>\n        <button\n          onClick={handleSubmit}\n          className=\"button-filled\"\n          style={{ backgroundColor: `${color}` }}\n        >\n          Submit\n        </button>\n        {subCreated ? <Redirect to={`/s/${subCreated._id}`} /> : null}\n      </form>\n    </div>\n  );\n};\n\nexport default SubForm;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SignupForm/SignupForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/LoginForm/LoginForm.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/DropdownItem/DropdownItem.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/SubIndex/SubIndex.js",["252"],"import { useState, useEffect } from \"react\";\nimport { fetchGetData } from \"../../api\";\nimport { Link } from \"react-router-dom\";\nimport \"./SubIndex.css\";\n\nimport Loader from \"../Loader\";\n\nconst SubIndex = ({}) => {\n  const [subs, setSubs] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      const response = await fetchGetData(\"http://localhost:3000/api/s/\");\n      setSubs(response.subs);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  return (\n    <div id=\"sub-index-container\">\n      <header id=\"sub-index-header\">\n        <h1>Browse Communities</h1>\n        <Link to=\"create\">Create Community</Link>\n      </header>\n      <div id=\"sub-index\">\n        {isLoading ? (\n          <Loader />\n        ) : subs ? (\n          subs.map((sub) => (\n            <Link to={`${sub._id}`} key={sub._id} className=\"sub-preview-link\">\n              <div className=\"sub-preview\">{sub.name}</div>\n            </Link>\n          ))\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default SubIndex;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Loader/Loader.js",["253"],"import \"./Loader.css\";\n\nconst Loader = ({}) => {\n  return (\n    <div className=\"lds-facebook\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Flash/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Flash/Flash.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/hooks/use-auth.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PrivateRoute/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/PrivateRoute/PrivateRoute.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Form/index.js",[],"/Users/k-dawg/Documents/coding-projects/reddit_clone/src/components/Form/Form.js",["254"],"import \"./Form.css\";\nimport imageOne from \"../../images/benn-mcguinness-vWbBC7G2BQQ-unsplash.jpg\";\nimport imageTwo from \"../../images/jon-tyson-OdRHKuvoa4M-unsplash (1).jpg\";\n\nconst Form = ({ image, click, btn, title, children }) => {\n  return (\n    <div className=\"form-container\">\n      <div className=\"form-art\" style={{ backgroundImage: imageTwo }}></div>\n      <form className=\"form-left\">\n        <h2 className=\"form-heading\">{title}</h2>\n        {children}\n        <button className=\"button-filled\" onClick={click}>\n          {btn}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n",{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":23,"column":19,"nodeType":"261","messageId":"262","endLine":23,"endColumn":29},{"ruleId":"263","severity":1,"message":"264","line":36,"column":6,"nodeType":"265","endLine":36,"endColumn":18,"suggestions":"266"},{"ruleId":"259","severity":1,"message":"267","line":7,"column":20,"nodeType":"261","messageId":"262","endLine":7,"endColumn":31},{"ruleId":"263","severity":1,"message":"268","line":26,"column":6,"nodeType":"265","endLine":26,"endColumn":8,"suggestions":"269"},{"ruleId":"263","severity":1,"message":"270","line":29,"column":6,"nodeType":"265","endLine":29,"endColumn":8,"suggestions":"271"},{"ruleId":"259","severity":1,"message":"272","line":12,"column":10,"nodeType":"261","messageId":"262","endLine":12,"endColumn":17},{"ruleId":"259","severity":1,"message":"273","line":14,"column":22,"nodeType":"261","messageId":"262","endLine":14,"endColumn":35},{"ruleId":"274","severity":1,"message":"275","line":8,"column":19,"nodeType":"276","messageId":"277","endLine":8,"endColumn":21},{"ruleId":"274","severity":1,"message":"275","line":3,"column":17,"nodeType":"276","messageId":"277","endLine":3,"endColumn":19},{"ruleId":"259","severity":1,"message":"278","line":2,"column":8,"nodeType":"261","messageId":"262","endLine":2,"endColumn":16},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"no-unused-vars","'setMessage' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'auth.user'. Either include it or remove the dependency array.","ArrayExpression",["281"],"'setComments' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postID' and 'subID'. Either include them or remove the dependency array.",["282"],"React Hook useEffect has a missing dependency: 'auth.token'. Either include it or remove the dependency array.",["283"],"'allSubs' is assigned a value but never used.","'setSubCreated' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'imageOne' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},"Update the dependencies array to be: [auth.token, auth.user]",{"range":"290","text":"291"},"Update the dependencies array to be: [postID, subID]",{"range":"292","text":"293"},"Update the dependencies array to be: [auth.token]",{"range":"294","text":"295"},[906,918],"[auth.token, auth.user]",[753,755],"[postID, subID]",[876,878],"[auth.token]"]